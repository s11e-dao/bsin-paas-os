 user  nginx;
 worker_processes  auto;
 #  error_log 输出目录
 error_log  /var/log/nginx/error.log notice;
 pid        /var/run/nginx.pid;

 events {
   # 单个工作进程可以允许同时建立外部连接的数量
     worker_connections  1024;
 }
 http {
     include       /etc/nginx/mime.types;
     default_type  application/octet-stream;
     log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                       '$status $body_bytes_sent "$http_referer" '
                       '"$http_user_agent" "$http_x_forwarded_for"';
     access_log  /var/log/nginx/access.log  main;
     sendfile        on;
     #tcp_nopush     on; 
     keepalive_timeout  65;  #连接存活时间
     #gzip  on;  支持传递压缩文件
     #  nginx 配置文件中支持 include ，即支持多配置文件组合
     include /etc/nginx/conf.d/*.conf;


     server {
         # 这里就是表示监听的端口
         listen       80;
         listen  [::]:80;
         # 这里表示服务地址 写域名或者ip
         server_name  localhost;
         #access_log  /var/log/nginx/host.access.log  main;

         # 这里就是我们今天要接触的东西了
         # / 表示的是 ip:port后面跟着的路径 / 就是 ip:port/
         # 如果是 /nzc 访问的时候就是  ip:port/nzc/
         #基于这个逻辑，我们就可以运行多个站点
         # 这里还可以写表达式、正则表达式等
         location / {
#              root   /usr/share/nginx/html;
             alias   /home/bsin-paas-os/ui-apps/upms/dist;
             index  index.html index.htm;
         }
         #error_page  404              /404.html;
         # redirect server error pages to the static page /50x.html
         #错误页面转发
         error_page   500 502 503 504  /50x.html;
         location = /50x.html {
             root   /usr/share/nginx/html;
         }
         # 反向代理的例子
         # proxy the PHP scripts to Apache listening on 127.0.0.1:80
         #
         #location ~ .php$ {
         #    proxy_pass   http://127.0.0.1;
         #}

         # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
         #
         #location ~ .php$ {
         #    root           html;
         #    fastcgi_pass   127.0.0.1:9000;
         #    fastcgi_index  index.php;
         #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;
         #    include        fastcgi_params;
         #}
         # deny access to .htaccess files, if Apache's document root
         # concurs with nginx's one
         #
         # 黑名单白名单功能
         #location ~ /.ht {
         #    deny  all;
         #}
     }
 }
